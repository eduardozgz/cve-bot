pub fn format_long_string_list(
    items: &[&str],
    separtor: &str,
    max_part_length: usize,
) -> Vec<String> {
    let max_part_length: isize = max_part_length.try_into().unwrap();
    let mut remaining_part_length = max_part_length;
    let items_length = items.len();

    let mut parts = vec![];

    if items_length <= 0 {
        return parts;
    }

    parts.push(String::new());

    for item in items {
        let last_page = parts.last_mut().unwrap();

        // Very first item, just add it
        if last_page.len() == 0 {
            last_page.push_str(item);
            continue;
        }

        let new_str_size: isize = (last_page.len() + item.len() + separtor.len())
            .try_into()
            .unwrap();

        if new_str_size < remaining_part_length {
            last_page.push_str(separtor);
            last_page.push_str(item);
            remaining_part_length -= new_str_size;
        } else {
            parts.push(String::from(*item));
            remaining_part_length = max_part_length;
        }
    }

    parts
}
