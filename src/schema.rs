diesel::table! {
    vendors (id) {
        id -> Uuid,
        name -> Varchar,
    }
}

diesel::table! {
    products (id) {
        id -> Uuid,
        name -> Varchar,
        vendor_id -> Uuid,
    }
}

diesel::table! {
    cves (id) {
        id -> Uuid,
        cve_id -> Varchar,
        created_at -> Timestamptz,
        updated_at -> Timestamptz,
        summary -> Varchar,
        json -> Nullable<Jsonb>,
        vendors ->  Nullable<Jsonb>,
        cwes -> Nullable<Jsonb>,
        cvss2 -> Nullable<Double>,
        cvss3 -> Nullable<Double>,
    }
}

diesel::joinable!(products -> vendors (vendor_id));

// @generated automatically by Diesel CLI.

pub mod sql_types {
    #[derive(diesel::query_builder::QueryId, diesel::sql_types::SqlType)]
    #[diesel(postgres_type(name = "subscription_kind"))]
    pub struct SubscriptionKind;
}

diesel::table! {
    channel_config (id) {
        #[max_length = 20]
        id -> Varchar,
        #[max_length = 20]
        guild_id -> Varchar,
        opencve_frontend_url -> Nullable<Varchar>,
    }
}

diesel::table! {
    use diesel::sql_types::*;
    use super::sql_types::SubscriptionKind;

    channel_subscription (kind, name) {
        #[max_length = 20]
        channel_id -> Varchar,
        kind -> SubscriptionKind,
        name -> Varchar,
    }
}

diesel::table! {
    guild_config (id) {
        #[max_length = 20]
        id -> Varchar,
        opencve_frontend_url -> Nullable<Varchar>,
    }
}

diesel::joinable!(channel_config -> guild_config (guild_id));
diesel::joinable!(channel_subscription -> channel_config (channel_id));

diesel::allow_tables_to_appear_in_same_query!(channel_config, channel_subscription, guild_config,);
